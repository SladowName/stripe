generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                 @id
  email                 String                 @unique
  name                  String
  password              String
  subscriptions         Subscription[]
  subscriptionSchedules SubscriptionSchedule[]
  charges Charge[]
}

model Product {
  id          String  @id
  name        String
  active      Boolean @default(true)
  description String?
  prices      Price[]
}

model Price {
  id                String             @id
  currency          Currency           @default(usd)
  active            Boolean            @default(true)
  unitAmount        Int                @map("unit_amount")
  productId         String             @map("product_id")
  product           Product            @relation(fields: [productId], references: [id])
  subscriptionItems SubscriptionItem[]
}

model Subscription {
  id         String @id
  status SubscriptionStatus @default(incomplete)
  periodStart DateTime
  periodEnd DateTime
  customerId String @map("customer_id")
  customer   User   @relation(fields: [customerId], references: [id])
}

model SubscriptionSchedule {
  id          String      @id
  startDate   DateTime    @map("start_date")
  endBehavior EndBehavior @map("end_behavior")
  status SubscriptionStatus @default(incomplete)
  customerId  String      @map("customer_id")
  customer    User        @relation(fields: [customerId], references: [id])
}

model SubscriptionItem {
  id       String @id
  quantity Int
  priceId  String @map("price_id")
  price    Price  @relation(fields: [priceId], references: [id])
}

model Phase {
  id Int @id @default(autoincrement())
  startDate DateTime
  endDate DateTime
}

model Account {
  id String @id
  type AccountType
  country String
  email String
}

model Charge {
  id String @id
  amount Int
  currency Currency
  customer User @relation(fields: [customerId], references: [id])
  customerId String @map("customer_id")
}

enum AccountType {
  standard
  express
  custom
}

enum Currency {
  usd
  aed
  afn
  all
  aud
  php
  pln
}

enum EndBehavior {
  cancel
  release
}

enum SubscriptionStatus {
  trialing
  active
  incomplete
  incomplete_expired
  past_due
  canceled
  unpaid
  paused
}
